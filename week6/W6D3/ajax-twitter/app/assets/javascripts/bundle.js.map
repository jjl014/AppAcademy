{"version":3,"sources":["webpack/bootstrap ec35252f06274fff9636","./frontend/follow_toggle.js","./frontend/api_util.js","./frontend/twitter.js","./frontend/util.js","./frontend/users_search.js","./frontend/tweet_compose.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;ACrCA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH,CAAC;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACPA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB;AACrB,6CAA6C;;AAE7C;AACA;;AAEA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,qCAAqC,sCAAsC;AAC3E,wBAAwB,QAAQ;AAChC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,QAAQ;AAC3D,+BAA+B,cAAc;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec35252f06274fff9636","const Util = require('./util');\nconst APIUtil = require('./api_util');\n\nclass FollowToggle {\n  constructor(el){\n    this.userId = $(el).data(\"user-id\");\n    this.followState = $(el).data(\"initial-follow-state\");\n    this.followButton = $(el);\n    this.render();\n    this.bindEvents();\n  }\n\n  render(){\n    this.followButton.text(Util.capitalize(this.followState) + \"!\");\n    // We're back from async land, so enable the button\n    this.followButton.prop('disabled', false);\n  }\n\n  bindEvents(){\n    this.followButton.on(\"click\", (e) => this.handleClick(e));\n  }\n\n  toggleFollowState(){\n    this.followState = this.followState === 'followed' ?\n    \"unfollowed\" : \"followed\";\n    this.render();\n  }\n\n  handleClick(event){\n    event.preventDefault(); // wouldnt wanna re render!\n\n    // Synchronously disable the button\n    this.followButton.prop('disabled', true);\n\n    let myPromise = this.followState === 'followed' ?\n                                  APIUtil.unfollowUser(this.userId) :\n                                  APIUtil.followUser(this.userId);\n\n    myPromise.then(this.toggleFollowState.bind(this));\n  }\n}\n\nmodule.exports = FollowToggle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/follow_toggle.js\n// module id = 0\n// module chunks = 0","const APIUtil = {\n  followUser: id => (\n    $.ajax({\n      url: `/users/${id}/follow`,\n      dataType: 'JSON',\n      method: \"POST\",\n    })\n  ),\n\n  unfollowUser: id => (\n    $.ajax({\n      url: `/users/${id}/follow`,\n      dataType: 'JSON',\n      method: \"DELETE\",\n    })\n  ),\n\n  searchUsers: (queryVal, success) => (\n    $.ajax({\n      url: '/users/search',\n      dataType: 'JSON',\n      data: { query: queryVal },\n      success\n    })\n  ),\n\n  createTweet: (data, success) => (\n    $.ajax({\n      url: '/tweets',\n      method: 'POST',\n      dataType: 'JSON',\n      data,\n      success\n    })\n  )\n};\n\nmodule.exports = APIUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/api_util.js\n// module id = 1\n// module chunks = 0","const FollowToggle = require('./follow_toggle');\nconst UsersSearch = require('./users_search');\nconst TweetCompose = require('./tweet_compose');\n\n$(() => {\n  $(\"button.follow-toggle\").each((_, element) => {\n    new FollowToggle(element);\n  });\n\n  $(\"nav.users-search\").each((_, element) => {\n    new UsersSearch(element);\n  });\n\n  $(\"form.tweet-compose\").each((_, element) => {\n    new TweetCompose(element);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/twitter.js\n// module id = 2\n// module chunks = 0","const Util = {\n  capitalize(str) {\n    if (str.length < 1) return str;\n    return str[0].toUpperCase() + str.slice(1).toLowerCase();\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/util.js\n// module id = 3\n// module chunks = 0","const APIUtil = require('./api_util');\nconst FollowToggle = require('./follow_toggle');\n\nclass UsersSearch {\n  constructor(el){\n    this.element = $(el);\n    this.input = this.element.find('input');\n    this.ul = this.element.find('ul');\n    this.bindEvents();\n  }\n\n  bindEvents(){\n    this.input.on('keyup', (event) => this.handleInput(event));\n  }\n\n  handleInput(event){ // event.target.value\n    let value = $(event.currentTarget).val();//event.target.value;\n\n    APIUtil.searchUsers(value, this.render.bind(this));\n  }\n\n  render(users){\n    this.ul.empty(); // remove all the list items\n\n    for (let user of users){\n      let $li = $('<li>').text(user.username);\n      let $button = $(`<button\n        data-initial-follow-state=\"${user.followed ? 'unfollow' : 'follow'}\"\n        data-user-id=\"${user.id}\"\n        class=\"follow-toggle\">`);\n\n      new FollowToggle($button);\n\n      $li.append($button);\n      this.ul.append($li);\n    }\n  }\n}\n\nmodule.exports = UsersSearch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/users_search.js\n// module id = 4\n// module chunks = 0","const APIUtil = require('./api_util');\n\nclass TweetCompose {\n  constructor($el) {\n    this.$form = $($el);\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.$form.on(\"submit\", this.handleSubmit.bind(this));\n    $('form.tweet-compose textarea').on(\"keyup\",\n                                      this.renderCharsLeft.bind(this));\n    $('a.add-mentioned-user').on('click',\n                                      this.addMentionedUser.bind(this));\n  }\n\n  addMentionedUser(event){\n    event.preventDefault();\n    // 1 find the script tag\n    const script = $('.tweet-compose script').html();\n\n    // 2. make an anchor\n    const $anchor = $('<a href=\"#\">').text('Remove');\n\n    // 3. add event listener to it\n    $anchor.on('click', function(e){\n      e.preventDefault();\n\n      $(e.currentTarget).prev().remove();\n      $(e.currentTarget).remove();\n\n      return false;\n    });\n\n    // 4. append to script\n\n    $('div.mentioned-users').append(script);\n    $('div.mentioned-users').append($anchor);\n\n    return false;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    // 1. Extract values from form inputs and build json tweet\n    const $textArea = $(\"textarea[name='tweet[content]']\");\n    const $select = $(\"select[name='tweet[mentioned_user_ids][]']\");\n\n    const content = $textArea.val();\n    const mentionedUserId = $select.val();\n\n    // 2. serialize json tweet and send to server through APIUtil\n    // 3. Pass a success function that appends response tweet to tweet list\n    // const data = {\n    //   'tweet[content]': content,\n    //   'tweet[mentioned_user_ids][]': mentionedUserId\n    // };\n    const data = this.$form.serializeJSON();\n    APIUtil.createTweet(data, this.appendTweet.bind(this));\n    this.freezeInputs();\n  }\n\n  appendTweet(tweetData) {\n    const linkMaker = user => $(`<a href=\"/users/${user.id}\" >`)\n                      .text(`${user.username}`);\n\n    // 1. Get the feed\n    const $ul = $('#feed');\n    // 2. Create a new <li>\n    const $anchor = linkMaker(tweetData.user);\n    const $li = $('<li>').text(tweetData.content + ' -- ');\n    const date = ' -- ' + tweetData.created_at;\n    $li.append($anchor).append(date);\n\n    // 2.5: Make a ul of mentioned user (mentions?)\n    const $mentionsUl = $('<ul>');\n    const mentions = tweetData.mentions; // iterate me!\n\n    mentions.forEach(mention => {\n      // make an li with username and link to user show (id) page\n      const $mentionLi = $('<li>');\n      const $mentionA = linkMaker(mention.user);\n\n      $mentionLi.append($mentionA);\n    });\n\n    // 3. Prepend <li> to <ul>\n    $ul.prepend($li);\n    this.clearInput();\n    this.unfreezeInputs();\n  }\n\n  clearInput() {\n    $('textarea').val(\"\");\n    $('select').val(\"\");\n    $('strong').text(\"\");\n    $('.mentioned-users').empty();\n  }\n\n  freezeInputs() {\n    this.$form.find(':input').prop(\"disabled\", true);\n  }\n\n  unfreezeInputs() {\n    this.$form.find(':input').prop(\"disabled\", false);\n  }\n\n  renderCharsLeft() {\n    const $strong = $('form.tweet-compose strong');\n    const $textArea = $('form.tweet-compose textarea');\n    $strong.text(`${140 - $textArea.val().length} characters left.`);\n  }\n}\n\nmodule.exports = TweetCompose;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/tweet_compose.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}